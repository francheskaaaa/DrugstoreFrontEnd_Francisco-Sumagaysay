// createInventory.js
import React, { useEffect, useRef, useMemo } from "react";
import APIHandler from "../utils/APIHandler";

const CreateInventory = ({ isOpen, onClose }) => {
  const formRef = useRef(null);
  const apiHandler = useMemo(() => new APIHandler(), []); // Memoize the handler instance
  // Handle form submission
  const formSubmit = async (event) => {
    event.preventDefault(); // Prevent default browser behavior
    console.log("Form submitted!");

    // Collect input values
    const formData = new FormData(formRef.current); // Get data from the form
    const values = Object.fromEntries(formData.entries()); // Convert FormData to object

    console.log("Form Data:", values);

    // Perform additional actions (e.g., API calls) as needed
    alert("Form submitted successfully!");
  };

  // Log inputs when the modal opens and call checkLogin
    useEffect(() => {
    if (isOpen) {
      const checkLoginAndLog = async () => {
        try {
          console.log("Calling APIHandler checkLogin for refreshUrl and token:");
          await apiHandler.checkLogin();
        } catch (error) {
          console.error("Error in checking login:", error);
        }
      };

      checkLoginAndLog();
    }
  }, [isOpen, apiHandler]); // Add apiHandler here to avoid missing dependency warning// Run whenever isOpen changes

  // Render nothing if modal is not open
  if (!isOpen) return null;


  return (
    <div className="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-[#E0E7EC] p-8 rounded-lg shadow-lg w-full max-w-md">
        <h2 className="text-center text-2xl font-bold text-[#4B2354] mb-6">
          Add Inventory Form
        </h2>
        <form ref={formRef} onSubmit={formSubmit}>
          {/* Inventory ID and Product ID*/}
          <div className="flex space-x-4 mb-6">
            <div className="w-1/2">
              <label className="block text-[#6B7280] mb-2" htmlFor="inventory-id">
                Inventory ID
              </label>
              <input
                className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                type="number"
                id="inventory-id"
                placeholder="Inventory ID"
              />
            </div>
            <div className="w-1/2">
              <label className="block text-[#6B7280] mb-2" htmlFor="product-id">
                Product ID
              </label>
              <input
                className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                type="number"
                id="product-id"
                placeholder="Product ID"
              />
            </div>
          </div>

          {/* Product Name */}
          <div className="mb-6">
            <label className="block text-[#6B7280] mb-2" htmlFor="product-name">
              Product Name
            </label>
            <input
              className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
              type="text"
              id="product-name"
              placeholder="Product Name"
            />
          </div>

          {/* Batch Number / Purchase Order ID */}
          <div className="flex space-x-4 mb-6">
            <div className="w-1/2">
              <label className="block text-[#6B7280] mb-2" htmlFor="batch-number">
                Batch Number
              </label>
              <input
                className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                type="number"
                id="batch-number"
                placeholder="Batch Number"
              />
            </div>
            <div className="w-1/2">
              <label className="block text-[#6B7280] mb-2" htmlFor="purchase-order-id">
                Purchase Order ID
              </label>
              <input
                className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                type="number"
                id="purchase-order-id"
                placeholder="Purchase Order ID"
              />
            </div>
          </div>

          {/* Stock In / Stock Out */}
          <div className="flex space-x-4 mb-6">
            <div className="w-1/2">
              <label className="block text-[#6B7280] mb-2" htmlFor="stock-in">
                Stock In
              </label>
              <input
                className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                type="number"
                id="stock-in"
                placeholder="Stock In"
              />
            </div>
            <div className="w-1/2">
              <label className="block text-[#6B7280] mb-2" htmlFor="stock-out">
                Stock Out
              </label>
              <input
                className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                type="number"
                id="stock-out"
                placeholder="Stock Out"
              />
            </div>
          </div>

          {/* Expiry Date / Low Stock Threshold */}
          <div className="flex space-x-4 mb-8">
            <div className="w-1/2">
              <label className="block text-[#6B7280] mb-2" htmlFor="expiry-date">
                Expiry Date
              </label>
              <div className="relative">
                <input
                  className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                  type="datetime-local"
                  id="expiry-date"
                  placeholder="Expiry Date"
                />
              </div>
            </div>
            <div className="w-1/2">
              <label
                className="block text-[#6B7280] mb-2"
                htmlFor="low-stock-threshold"
              >
                Low Stock Threshold
              </label>
              <input
                className="w-full bg-[#E0E7EC] border-b-2 border-[#6B7280] focus:outline-none focus:border-[#3B82F6]"
                type="number"
                id="low-stock-threshold"
                placeholder="Low Stock Threshold"
              />
            </div>
          </div>

          {/* Buttons */}
          <div className="flex justify-between">
            <button
              type="button"
              onClick={onClose}
              className="bg-[#4B2354] text-white py-2 px-4 rounded-lg hover:bg-[#3A1A42]"
            >
              Cancel
            </button>
            <button
              type="submit"
              className="bg-[#0F3D4B] text-white py-2 px-4 rounded-lg hover:bg-[#0C2F3A]"
            >
              Save
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default CreateInventory;